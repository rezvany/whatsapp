{"version":3,"sources":["logo.svg","App.js","SignIn.js","reportWebVitals.js","index.js"],"names":["App","Copyright","props","Typography","variant","color","align","Link","href","Date","getFullYear","theme","createTheme","SignIn","query","URLSearchParams","window","location","search","get","useState","numstring","setnum","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Button","onClick","fullWidth","mt","mb","onSubmit","event","preventDefault","data","FormData","currentTarget","url","replace","console","log","noValidate","TextField","type","margin","required","id","label","name","autoFocus","onChange","e","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAAe,I,qBCYAA,I,6FCMf,SAASC,EAAUC,GACf,OACI,eAACC,EAAA,EAAD,yBAAYC,QAAQ,QAAQC,MAAM,iBAAiBC,MAAM,UAAaJ,GAAtE,cACK,kBACD,cAACK,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,6BAA3B,6BAEQ,KACP,IAAIC,MAAOC,cACX,QAKb,IAAMC,EAAQC,cAEC,SAASC,IACpB,IAAMC,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAKlD,GAJSJ,EAAMK,IAAI,MACPL,EAAMK,IAAI,SAGMC,mBAAS,KAArC,mBAAOC,EAAP,KAAkBC,EAAlB,KAmBA,OACI,cAACC,EAAA,EAAD,CAAeZ,MAAOA,EAAtB,SACI,eAACa,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACI,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CACIC,GAAI,CACAC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALpB,UAQI,cAACC,EAAA,EAAD,CACIC,QAAS,WAAOb,EAAO,KACvBc,WAAS,EACThC,QAAQ,YACRyB,GAAI,CAAEQ,GAAI,EAAGC,GAAI,GAJrB,iBAQA,eAACV,EAAA,EAAD,CAAKH,UAAU,OAAOc,SArCjB,SAACC,GAClBA,EAAMC,iBAEN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAK5BC,EAAM,mBADGH,EAAKvB,IAAI,YACkB,cACxCH,OAAOC,SAAS6B,QAAQD,GACxBE,QAAQC,IAAI,CACRH,IAAKH,EAAKvB,IAAI,eA0BwC8B,YAAU,EAACpB,GAAI,CAAEQ,GAAI,GAAnE,UACI,cAACa,EAAA,EAAD,CACIC,KAAK,SACLC,OAAO,SACPC,UAAQ,EACRjB,WAAS,EACTkB,GAAG,WACHC,MAAM,kBACNC,KAAK,WACLC,WAAS,EACTC,SAAU,SAACC,GAAD,OAAOrC,EAAOqC,EAAEC,OAAOC,QACjCA,MAAOxC,IAIX,cAACa,EAAA,EAAD,CACIiB,KAAK,SACLf,WAAS,EACThC,QAAQ,YACRyB,GAAI,CAAEQ,GAAI,EAAGC,GAAI,GAJrB,kCAWR,cAACrC,EAAD,CAAW4B,GAAI,CAAEQ,GAAI,EAAGC,GAAI,UCxG5C,IAYewB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAED,cAAC5D,EAAD,MAEC6D,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1340f243.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport Button from '@mui/material/Button';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Button variant=\"contained\" onClick={() => { alert(\"salam\") }}>Hello World</Button>\n      \n    </div>\n  );\n}\nexport default App;\n","\nimport React, { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport QRCode from \"react-qr-code\";\n\n\nfunction Copyright(props) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://rezvany.github.io/\">\n                Rezvany Profile\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst theme = createTheme();\n\nexport default function SignIn() {\n    const query = new URLSearchParams(window.location.search);\n    let sn = query.get('sn') // 123 \n    let model = query.get('model') // 123 \n    // const [urlstring, setURL] = useState(window.location.search);\n    // const [modelstring, setModel] = useState(model);\n    const [numstring, setnum] = useState(\"\");\n    // const [snstring, setSN] = useState(sn);\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // setQR(\"\");\n        const data = new FormData(event.currentTarget);\n        // const urlstring = \"wwww.google.com/?search=\" + data.get('model') + \"\";\n        // setQR(urlstring);\n        // eslint-disable-next-line no-console\n        let number = data.get('username');\n        let url = \"https://wa.me/98\" + number + \"?text=salam\";\n        window.location.replace(url);\n        console.log({\n            url: data.get('username'),\n            // email: data.get('model'),\n            // password: data.get('sn'),\n        });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Button\n                        onClick={() => {setnum(\"\")}}\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                    >\n                        New\n                    </Button>\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                        <TextField\n                            type=\"number\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"username\"\n                            label=\"Whatsapp number\"\n                            name=\"username\"\n                            autoFocus\n                            onChange={(e) => setnum(e.target.value)}\n                            value={numstring}\n                        // value={numstring}\n                        // onChange={()=>seturl(this.target.value)}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                        >\n                            Go to Whatsapp\n                        </Button>\n\n                    </Box>\n                </Box>\n                <Copyright sx={{ mt: 8, mb: 4 }} />\n            </Container>\n        </ThemeProvider >\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SignIn from './SignIn';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n <SignIn />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}